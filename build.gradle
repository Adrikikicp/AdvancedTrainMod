
buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net/"
        }
        maven {
            name = 'sponge'
            url = 'https://repo.spongepowered.org/maven/'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'java'



sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.5.2768"
    runDir = "run"
        mappings = "snapshot_20170624"
    String resolved_core_plugin = mod_core_plugin.replace('${mod_group}', mod_group).replace('${mod_id}', mod_id)
    clientJvmArgs += "-Dfml.coreMods.load=${resolved_core_plugin}"
    serverJvmArgs += "-Dfml.coreMods.load=${resolved_core_plugin}"
    String resolved_core_config = mod_mixin_configs.replace('${mod_id}', mod_id)
    clientRunArgs += "--mixin ${resolved_core_config}"
    serverRunArgs += "--mixin ${resolved_core_config}"
}

repositories {
    mavenCentral()
    mavenLocal()
    google()
    jcenter()
    maven {
        name = 'sponge'
        url = 'https://repo.spongepowered.org/maven/'
    }
    maven{ url = 'https://jitpack.io'}
    maven{ url = 'https://teamopenindustry.cc/maven/'}
}

configurations{
    embed
    compile.extendsFrom(embed)
}

dependencies {

    embed('org.spongepowered:mixin:0.7.11-SNAPSHOT'){
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
    }

    deobfCompile 'com.github.Fexcraft:FCL:1.12.2-SNAPSHOT'
    compile 'com.github.TeamOpenIndustry:TrackAPI:forge_1.12.2-SNAPSHOT'

}

mixin {
    add sourceSets.main, "atm.refmap.json"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
jar {
    from {
        configurations.embed.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "LICENSE.txt", "META-INF/MANIFSET.MF", "META-INF/maven/**", "META-INF/*.RSA", "META-INF/*.SF"
    }

    manifest {
        attributes "ForceLoadAsMod": "true"
        attributes "TweakClass": "org.spongepowered.asm.launch.MixinTweaker"
        attributes "TweakOrder": "0"
    }
}
